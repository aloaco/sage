meta {
  name: Generate MVP
  type: http
  seq: 5
}

post {
  url: {{baseUrl}}{{apiPath}}/generate-mvp
}

headers {
  Content-Type: application/json
}

body:json {
  {
    "selectedPOCJson": "{\n  \"id\": \"poc-revenue\",\n  \"title\": \"Revenue-Focused Social Platform\",\n  \"focus\": \"revenue\",\n  \"features\": [\n    \"User Authentication\",\n    \"Basic Post Creation\",\n    \"Timeline View\",\n    \"Premium Features\"\n  ],\n  \"timeEstimate\": \"8-10 weeks\",\n  \"cost\": 60000\n}",
    "featuresJson": "[\n  {\n    \"id\": \"auth-001\",\n    \"title\": \"User Authentication System\",\n    \"description\": \"Allow users to create accounts and log in securely\",\n    \"complexity\": \"medium\"\n  },\n  {\n    \"id\": \"posts-001\",\n    \"title\": \"Post Creation and Timeline\",\n    \"description\": \"Users can create posts and view timeline of followed users\",\n    \"complexity\": \"high\"\n  }\n]",
    "prioritiesJson": "[\n  {\n    \"id\": \"auth-001\",\n    \"feature\": \"User Authentication System\",\n    \"priority\": \"high\",\n    \"reasoning\": \"Foundation for all other features\"\n  }\n]",
    "risksJson": "[\n  {\n    \"id\": \"risk-001\",\n    \"title\": \"Scalability Concerns\",\n    \"description\": \"Timeline feature may not scale with large user base\",\n    \"severity\": \"medium\",\n    \"category\": \"technical\",\n    \"impact\": \"Performance degradation\",\n    \"mitigation\": \"Implement pagination and caching\"\n  }\n]",
    "hourlyRate": 150
  }
}

tests {
  test("Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("Response should contain MVP deliverables", function() {
    const data = JSON.parse(res.getBody().data);
    expect(data).to.have.property('mvpDeliverables');
    expect(data.mvpDeliverables).to.be.an('array');
  });
  
  test("Deliverables should have cost estimates", function() {
    const data = JSON.parse(res.getBody().data);
    data.mvpDeliverables.forEach(deliverable => {
      expect(deliverable).to.have.property('cost');
      expect(deliverable.cost).to.be.a('number');
    });
  });
}